IAM :-  https://pranithcloud19.signin.aws.amazon.com/console
------

1. How to Create a MAIN IAM user for root account ?

Ans. Login to root account.

Step 1 ---> Search for IAM in search bar.

open it.

Step 2 ---> On left you find <<users>> option, Select that option. 

---> After selecting that new page will open on that you find << Add Users >> option on 
top right side. Select that option.


---> After selecting that there are 4 steps
1. Specify user details
2. Set Permissions
3. Review and Create.
4. retrieve password

---> In step one, Give username and select (I want to create an IAM user) Option, Then give autogenerated password or custom password.

---> And there is another option (Users must create a new password at next sign-in) ---> This option is for, when the new IAM login for the first time it asks to change the password.


---> In step Two, There is three options

1. Add user to group :- We can add the user to existing group so he can inherit the policies from that group.

2. Copy Permissions :- It is nothing but just giving same policies from an existing user to this newly created user.

3. Attach policies directly :- We can attach any policies directly based on requriement.


---> In Third step, It shows a review and permissions summary and tags. we can add tags if need. On right down side there is a option called create user, If we select that then user is created.


---> At last, We can download the user credentials in excel format or we email that creditials to user.


2. How to disable the console access to IAM user ?

Ans. Login to Main IAM user (PranithAWS) and goto users and open the user that you want to disable.

---> After opening that we see security credentials ---> Manage console access ---> Disable. Select these options and click apply, Now user didnt have access to console.



User permissions (Attach/detach) :- Login to main IAM user and open user there we see 
-----------------------------------
permissions.

---> Permissions ---> Add permissions(Here we see three options,select one based on requriement) ---> Attach policies directly(Select the Policies) ---> Click Next and select the Add permissions option.

---> To remove the policies, Open the user and we find policies and select the policies and click remove.


Adding IAM user to groups :- Login to main IAM user and open user there we see 
----------------------------
Groups.

---> Groups ---> Add user to groups(We see the existing groups with policies attached) ---> Select the group and Click the add user to group.

---> To remove the IAM user from groups, Open the user and we find groups and select the group and click remove.

 
Adding tags to IAM User :- Login to main IAM user and open user there we see Tags.
--------------------------

---> Tags ---> Add New Tag ---> Enter the Key-value and click Save changes.

---> To remove the tags, Open the user and we find tags and select manage tags and select remove and click save changes.


IAM Security credentials :-
---------------------------

---> In security credentials, We can change passwords,disable the IAM users,Enable/Disable the MFA,Create and delete the Access keys. ETC.


IAM Access Advisor :-
---------------------

---> Access advisor reports the recent activties of user for the services.


3. How to Delete the IAM user completely ?

Ans. Login to main IAM user and select the user and we find delete option on top right side, Select that option and confirm the deletion and click delete.


Policies :-
-----------

---> There are two types of policies.

1. Managed Policies
2. Inline Policies


---> Creating Inline Policies :-
--------------------------------

---> While creating Inline policies we have visual editor and JSON.

---> Visual editor means all policies are visible we just select the policies based on requirement.

---> JSON means we have write code in java.


---> In visual editor has 5 access levels.

1. List
2. Read
3. write
4. Permissions management
5. Tagging

---> All these 5 groups are policies, We can go and select the requried policies.

---> Resources :- Specify the resource ARN's for actions.


---> Open IAM Dashboard ---> Policies ---> Create Policy ---> Select the service(IAM) ---> Access Level (Select the requried policies) ---> Resources ---> Click next ---> Give the Policy Name ---> Click Create policy.


To create and read IAM user acess controls :-
----------------------------------------------

List :-
-------

---> GetAccountSummary
---> GetLoginProfile
---> ListAttachedGroupPolicies
---> ListAttachedUserPolicies
---> ListGroupsForUser
---> ListGroupPolicies
---> ListGroups
---> ListPolicies

Group :-
--------

---> GetGroup
---> GetGroupPolicy
---> GetPolicy
---> GetPolicyVersion
---> GetUser
---> GetUserPolicy

Write :-
--------

---> ChangePassword
---> CreateLoginProfile
---> CreateGroup
---> CreateUser

Permission Management :-
------------------------

---> AttachUserPolicy
---> CreatePolicy
---> CreatePolicyVersion


Roles :-
--------

---> It is used for temporary access without credentials.

* We need to attach the role to service.

---> While creating the role we have 5 Trusted Entity Types.

1. AWS Service ---> In this we attach the role to AWS service.
2. AWS Account ---> In this we are giving the access to 3rd party person. It has time limit.

3. Web Identity ---> It is for federation (SSO)
4. SAML 2.0 federation ---> ---> It is for federation (SSO)
5. Custom Trust policy ---> It is for federation (SSO)

1. AWS Service :-
-----------------

---> Open IAM Dashboard ---> Roles ---> Create role ---> Select the Trusted Entity(AWS Service) ---> Click Next ---> Add permissions ---> Click Next ---> Give The Role Name ---> Click Create role.

2. AWS Account :-
------------------

---> Open IAM Dashboard ---> Roles ---> Create role ---> Select the Trusted Entity(AWS Account) ---> Select Another AWS Account(Give AWS account ID) ---> Click Next ---> Add permissions ---> Click Next ---> Give The Role Name ---> Click Create role.


---> In role, we have session duration, We can set that duration based on requirement.

---> Maximum duration is 12 hours.

---> STS - Secure Token Service.



EC2 Service :-
--------------

---> Login to console and search for EC2. Select EC2 and enter into EC2 Dashboard.

---> There we see the launch Instance option select that option.

---> There we have to give the configurations for everystep.

1. Name and Tags

---> This is the first step to launch the EC2 instance.

---> Give the name and tag to EC2. Eg :- MyFirstInstance.


2. Application and OS Images

---> Here we find the number of instance types, we can choose based on your requirement.

---> We choose t2 micro which is free tier (AMI).

---> We choose OS as REDHAT Linux free tier.

3. Key Pair

---> If we did not have a key pair than create it and attach it.

4. Network Settings

---> VPC - Select the VPC default

---> Subnet - Choose the AZ based on requirement. For 1A we 4091 IP addresses.

---> Auto-Assign Public IP - Choose enable.

--> Firewall (Security groups) :- Select the default security group.


5. Configure Storage

---> Select the volume size based on requirement.

---> We can also add the additional volumes.


6. Advance details


Configure Instance Details :-
-----------------------------

---> Number Instance - We can launch the N number of instances at a time.

---> Purchasing option -  Enable the request Spot Instances option. After enabling we can see the biding instances.

---> Network - Here we can select the VPC. We have default VPC select that.

---> Subnet - Here we can select the Availablity zone. AP-South-1a has 4091 ip addresses available.

---> Auto-Assign Public IP - Select enable option (If you are on internet enable it, If you are sitting in company disable it)

---> Hostname Type -

---> DNS Hostname -

---> Placement Group - If we want to attach instance to placement group than enable the option "Add instance to placement group".

---> Capacity resevation - None

---> Domain Joint Directory - Having multiple instances and adding all instances to single directory.(Directory Services)

---> IAM Role - Attach the role to EC2 instance.

---> Shutdown Behavior - Here we two options stop and terminate. Whenever we shutdown the EC2 instance the selected option will be the performed. (Chooses STOP option).

---> Stop-Hibernate Behavior - It is nothing but a sleep mode.

---> Enable Termination Protection - It is used to protect against the accidental termination.

---> Monitoring - It enables the detailed monitoring. (Charged)

---> Tenancy - Pricing models (Shared and dedicated). Enable the shared.

---> Credit Specifications - Burstable performance instances.

---> File System - EFS

Network Interfaces :-
---------------------

---> Eth0 - Private IP

---> Eth1 - Default Public IP. If we assign private IP then it is not possible to give public IP.

Advanced Details :- 
-------------------

---> Enclave - It is related to nitro enclaves. If we process the highly sensitive data within the EC2 instance than enable the option.

---> Metadata Accessible - We can Enable/Disable. We can see the metadata information if we enable it.

---> Metadata Version - Keep it default.

---> Metadata token response hop limit - Keep it default

---> Allow tags in matadata -  Keep it default

---> User data - Here we use scripting. (Boot Strap scripting)


After launching the EC2 instance :-
-----------------------------------

---> After launching the EC2 it has six states.

1. Pending - Running (launching)

2. Stopping - Stoped (Stop)

3. Shuting down - Terminated (Kill or Terminate)


---> If we select the launched EC2 instance in below we get the description section. There we find all the metadata about instance.

---> Instance ID, Instance type, VPC ID, Subnet ID, Public IP, Public DNS name, Private IP, Private DNS name, Elastic IP Address.


---> If we stop and start the EC2 instance is public ip is change or not ? Yes

* If we stop and start the EC2 instance, Public ip is changes and also public DNS name also changes along with it.


Status Checks :-  There are two types of checks.

1. System Status Check - It checks the hardware of the EC2 instance.

2. Instance Status Check - It checks the software and network configurations.

---> If any of status checks will fail we are unable to login to EC2 instance. we have to pass both status checks.

---> If any check will fail, Just Stop and Start the EC2 instance.


* If we reboot the EC2 instance instance state wont be changed. It shows running state only.


---> Instance Actions :- Select the instance and right click on that instance we get some actions.

---> Launch Instance from Template - We can launch the N number of instances with same configurations.

---> Instance Settings ---> Attach to auto scaling group - If we have any auto scaling group we can attach EC2 instance to that group.

---> Instance Settings ---> Change Termination Protection - It protects from acceidental termination of Ec2 instance.

---> Instance Settings ---> Edit User Data - To edit user data first we have to stop the EC2 instance. (Scripting)

---> User data only edited for one time or first time. Not again and again.

---> Instance Settings ---> Change credit specifications - Burstable performance instance, we can enable cpu credits.

---> Get Instance Screenshot - To know the condition of EC2 instance.

* Is it possible to change the security groups while EC2 is running ? Yes...!

---> If we change any rule in security group it will affect immediately.


Process To Launch Windows EC2 Instance :-
-----------------------------------------

---> Open AWS console ---> Search for EC2 ---> There we see launch instance option ---> Fill all configurations and press launch instance.

---> After launching the instance ---> Allow the RDP protocol on security groups ---> decrypt the keypair (Give a right click on instance than some options will appear goto to security ---> Get windows password ---> Here upload the private key file(Keypair) ---> Press Decrypt password than we get the password).

---> Copy the public IP and paste it in remote desktop press connect ---> Give the credentials (UserName - Administrator / Password - Copy the password that we get) ---> Press connect (Now we're in windows EC2 instance).



Process to launch Linux EC2 Instance :-
---------------------------------------

---> Open AWS console ---> Search for EC2 ---> There we see launch instance option ---> Fill all configurations and press launch instance.

---> After launching the instance ---> Allow the SSH protocol on security groups --->  Open the putty generator and select load option ---> Select the keypair (PEM File converting to ppk file) ---> Select the save private key option (Give a name newly created ppk file and save it).

---> Now open Putty and there we give IP address (Copy the public IP from linux instance from description section) ---> On putty we find SSH ---> Auth ---> Credentials (Upload the ppk file there and press open option)

---> Now give the credentials (UserName - ec2-user / password will automatically taken) .


Image :-
--------

---> Process to launch the EC2 instance from AMI(Image) :-

--> How to create an Image ?

---> Open AWS console ---> Search for EC2 ---> There we see launch instance option ---> Fill all configurations and press launch instance.


---> After launching the EC2 instance goto actions ---> Image and Templates ---> Create Image.

---> After selecting the create image than give the image name and fill the details.

---> There we see No reboot option - if we enable that option --> while taking the image the instance wont get restart in middle.

---> While creating an image, we can also add an additional volumes.


Image Actions :-
----------------

---> Launch Instance from AMI - We can launch the new EC2 instance from this AMI.

---> If we select this, This will take directly to 2nd step.

---> Deregister AMI - Deleting the AMI.

---> Copy AMI - We can encrypt the image that is not encrypted.

---> We can copy the AMI from one region to another region.

---> Edit AMI Permissions - We can share the AMI from one account to another account.

---> By default AMI are private, We can make public here.

---> Register instance store-backed AMI - If we are migrating the on-premises virtual machine to AWS.


* Difference between launch template and image.

---> Launch template - Template has all seven steps completed. It doesnt include data.

---> Image - Image is one step. It includes data.


Snapshot Actions :-
-------------------

---> While creating the image automatically snapshots also created.

---> We find snapshots in snapshots section.

---> Create a volume from snapshot - We can create a new volume from this snapshot.

---> Create a image from snapshot - We can create a image a from root volume snapshot.

---> Copy snapshot - Copy the snapshot from one region to another region

---> Modify permissions - We can share the snapshot from one AWS account to Another AWS account.

---> Manage fast snapshot restore - To restore a larger size snapshot quickly. And it is charged.

---> If we have snapshot with 1TB and we want create volume out of it. So it will take so much time. To create volume quickly than we use this option.

---> Archive Snapshot - 

---> Restore Snapshot from archive - 


* We cannot share the encrypted snapshot to others account. Because the encrypted keys are with us.


Recycle Bin :- Recycle bin contains the retention rules.

Retention rule - We can set the time period to delete the snapshots permenently.


LifeCycle Manager :-
--------------------

---> We can create a EBS snapshot automatically by creating a policy.

---> We need to give the tags to snapshots, Because we are identfying by using tags.

---> Goto EC2 ---> On left side we find lifecycle manager in Elastic block storage section ---> There we find create new lifecycle policy option ---> Selet policy type and press next step.

---> Select the target resource types (Volume/Instance) ---> Add the target resource tags ---> Give the description(Firstpolicy) ---> IAM role (Default) ---> Tags (Optional) ---> Policy Status (Enable). And press NEXT.

---> Schedule details (Fill the details based on requirement) ---> Advanced settings (Optional)

---> Tagging - Here we can give same tags or new tags to snapshot.

---> Fast Snapshot Restore - we can restore the larger size snapshot very quickly.

---> Cross Region Copy - We can copy across the multiple regions.

---> Cross Account Sharing - We share across the multiple accounts.


EC2 Image Builder :-
--------------------

---> Creating a image automatically with some softwares are installed.


Creating the Pipeline :- There are 5 steps.

1. Specify pipeline details

---> Pipeline Name - Give a name to pipeline.

---> Description - Give a description about pipeline

---> Build Schedule - Here we have three types.

1. Schedule Builder - We can specify a time to run a pipeline.

2. CRON expression - We use this linux instances.

3. Manual - The pipeline will run when we initiate it.

2. Choose recipe

---> Recipe means nothing but a software.

---> Use existing recipe - If we have any recipes available than we choose from there.

---> Create new recipe - If we dont have any recipes than we have to select.


3. Define infrastructure configuration

---> In third step we have 3 types.

1.Creating infrastructure configuration using service defaults - It will create its own suitable configuration.

2. Use Existing infrastructure configuration - If we have any existing configurations than go with them.

3. Create new infrastructure configuration - If we want create your own stuff then go with third option.


4. Define distribution settings

---> In fourth step we have 3 steps

1. Create distribution settings using service defaults
2. Use Existing distribution settings
3. Create new distribution settings.

5. Review

---> After review click on create pipeline. Now pipeline will be created. Goto actions and run the pipeline. (Automatically EC2 instance will launch and install automatically).


Volumes Actions :-
------------------
---> Modify Volume - To increase the size of volume (Root) without adding any additional volume.

---> We can change the volume type while increasing the volume size.

---> It changes in console but it wont allocated immediately in remote connection. So we have do small configuration inside the machine.

---> Goto disk management ---> Give a right click on allocated memory (Make sure that dont click on unallocated memory) ---> Extend volume ---> Next and next finish it.

---> Create Snapshot - Select the particular volume and go and click on create snapshot than we get the backup of the volume (Snapshot).

---> Delete Volume - We use this option to delete the volume. First we have to detach the volume from EC2 instance and then delete it.

---> Attach volume - Newly created volume need to attach to Ec2 instance at that time we use this option.

---> Detach Volume - To detach the volume from EC2 instance. Make sure that first we have to stop the EC2 instance to detach the root volume.


** Lauching a EC2 instance from AMI - Firstly we launch the one EC2 (Windows1) instance and then take an AMI from that Ec2 instance (Windows1), From that AMI we launch the another EC2 instance (Windows2)  and how you login to that windows2 Ec2 instance ? We should use windows1 EC2 instance password to login to windows2 Ec2 instance.


Load Balancer :-
----------------

To create a load balancer first we do these steps :-

1. Launch 2 EC2 instances with userdata (Shell Script).
2. Access the created file (index.html) using EC2 instance public IP on browser.
3. Make sure application is working.
4. Create ELB(ALB) with target groups.
5. Register the EC2 instances to target group.
6. Access the ELB through DNS name.

Shell Script :-
---------------

#!/bin/bash
yum install httpd -y
service httpd start
chkconfig httpd on
mkdir/var/www/html
echo 'Yo...! This is Pranith's first website.'>/var/www/html/index.html


Types of shells :-
------------------

1. /bin/sh ---> Bourne Shell
2. /bin/ksh
3. /bin/csh
4. /bin/bash ---> Bourne again shell (Bash shell)

---> $ - Normal User (Limited Permissions)

---> # - Root User (Full Permissions)


---> Linux is two types 

1. RPM Based (RHEL, CentOS)
2. Debain Based (Ubuntu, SuSE)


---> To install any package in linux we use (yum install) command.(RHEL, CentOS).

---> To install any package in linux we use (apt-get) command.(Ubuntu, SuSE).

* ACM - Amazon Certificate Manager - We can purchase the certificate of your website. 


---> Launch 2 EC2 instances, In user data give shell script code ---> After launching instances check the website with public IP ---> create ALB 

---> Create ALB Process - Give the name to ALB (FirstALB)

---> Scheme - In schemes there are two types.

1. Internet-facing - If you want  all users to access your application enable this option.

2. Internal - If you want only few people to access your application enable this option.

---> Network Mapping - VPC and AZ's

---> VPC - Choose default

---> Mappings - Choose the AZ's where your applications.

---> Security groups - Choose default

---> Listeners and routing - Here we choose the protocol and port. We have to create Target groups here.

Create Target Groups - Here we have to a target type.(Instances)

---> Target group name - Give the name to target group.

---> Protocol Version - HTTP1

---> Health Checks - Here we have to give path of your application.

---> Advance Health Check Settings :-

---> Healthy Threshold - It checks the application continuously. There we can mention the number.

---> Unhealthy Threshold - It only checks mentioned time if application didnt respond than it is unhealthy.

---> Timeout -

---> Interval - How many interval time to check the application.


Register the target groups :- Here we have to register the targets.

---> Create a target group and add the instances to target group.

---> Open target group ---> select the instances ---> select the include as pending option ---> select register pending targets.


* If we want to delete the Target group first we have to deregister the instances and listener rules in load balancer and than delete.

---> Stickiness - If all the requests want to goes to one sever than enable that option.


Auto-Scaling :-
---------------

Process to create ASG :-
------------------------

---> Create a load balancer with empty target group.

---> Create a launch template.

---> From that launch template create auto scaling.

---> Create load balancer(Set everything as default) ---> Create Target groups ---> Create launch template (Give a name to template, Select the AMI,Select instance type,select the keypair,give the userdata).

---> After creating the launch template select that and goto actions there we find create autoscaling group option, Select that option.

---> After selecting that give name to ASG ---> Select the launch template ---> press next ---> Select VPC and AZ's and press next ---> choose the ELB type(Attach to an existing load balancer) ---> Select the min,max and desired capacities ---> Add notifications(SNS, And it is optional) ---> Add tags(Optional) ---> goto review and press create auto scaling group.


---> In SNS we have Topic and subscription.

---> Topic - Here can give the name (Aws)

---> Subscription - Here we can give email.

* It is not possible to edit launch configuration once it is created. If we wnat to edit create a new configuration.



LightSail :-
------------

---> If we want to setup and create a vitual private server than go with lightsail.

---> LightSail contains containers, Databases, Networking, Storage, Domain & DNS, Snapshots.

---> Containers :- If we want create a container services than go with this.

---> Databases :- Lightsail supports only two database engines. 

1. MySql
2. PostgreSql

---> If we want to create a database for your lightsail instance than go with this.

---> Networking :- In Networking we have Static IP, Distribution and load balancer.

---> Static IP :- Here we can create and assign the static IP for your lightsail instance.

---> Distribution :- Cloud Front. It distributes the content to all edge locations.

---> Load balancer :- Here we can create a load balancer for your lightsail instance. It is charged.

---> Storage :- Here we can create the Bucket or a disk.

---> Domain & DNS :- In this we can create a DNS name and domains.

---> For domain first we have to register the domain name.

---> Snapshots :- A snapshot is a backup of complete lightsail instance.